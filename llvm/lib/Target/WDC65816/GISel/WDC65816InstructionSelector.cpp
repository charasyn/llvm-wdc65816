//===-- WDC65816InstructionSelector.cpp -----------------------------*- C++ -*-===//
//===----------------------------------------------------------------------===//
/// \file
/// This file implements the targeting of the InstructionSelector class for
/// WDC65816.
/// \todo This should be generated by TableGen.
//===----------------------------------------------------------------------===//

#include "WDC65816RegisterBankInfo.h"
#include "WDC65816Subtarget.h"
#include "WDC65816TargetMachine.h"
#include "llvm/CodeGen/GlobalISel/GIMatchTableExecutorImpl.h"
#include "llvm/CodeGen/GlobalISel/InstructionSelector.h"
#include "llvm/Support/Debug.h"

#define DEBUG_TYPE "m68k-isel"

using namespace llvm;

#define GET_GLOBALISEL_PREDICATE_BITSET
#include "WDC65816GenGlobalISel.inc"
#undef GET_GLOBALISEL_PREDICATE_BITSET

namespace {

class WDC65816InstructionSelector : public InstructionSelector {
public:
  WDC65816InstructionSelector(const WDC65816TargetMachine &TM, const WDC65816Subtarget &STI,
                          const WDC65816RegisterBankInfo &RBI);

  bool select(MachineInstr &I) override;
  static const char *getName() { return DEBUG_TYPE; }

private:
  bool selectImpl(MachineInstr &I, CodeGenCoverage &CoverageInfo) const;

  const WDC65816TargetMachine &TM;
  const WDC65816InstrInfo &TII;
  const WDC65816RegisterInfo &TRI;
  const WDC65816RegisterBankInfo &RBI;

#define GET_GLOBALISEL_PREDICATES_DECL
#include "WDC65816GenGlobalISel.inc"
#undef GET_GLOBALISEL_PREDICATES_DECL

#define GET_GLOBALISEL_TEMPORARIES_DECL
#include "WDC65816GenGlobalISel.inc"
#undef GET_GLOBALISEL_TEMPORARIES_DECL
};

} // end anonymous namespace

#define GET_GLOBALISEL_IMPL
#include "WDC65816GenGlobalISel.inc"
#undef GET_GLOBALISEL_IMPL

WDC65816InstructionSelector::WDC65816InstructionSelector(
    const WDC65816TargetMachine &TM, const WDC65816Subtarget &STI,
    const WDC65816RegisterBankInfo &RBI)
    : InstructionSelector(), TM(TM), TII(*STI.getInstrInfo()),
      TRI(*STI.getRegisterInfo()), RBI(RBI),

#define GET_GLOBALISEL_PREDICATES_INIT
#include "WDC65816GenGlobalISel.inc"
#undef GET_GLOBALISEL_PREDICATES_INIT
#define GET_GLOBALISEL_TEMPORARIES_INIT
#include "WDC65816GenGlobalISel.inc"
#undef GET_GLOBALISEL_TEMPORARIES_INIT
{
}

bool WDC65816InstructionSelector::select(MachineInstr &I) {
  // Certain non-generic instructions also need some special handling.
  if (!isPreISelGenericOpcode(I.getOpcode()))
    return true;

  if (selectImpl(I, *CoverageInfo))
    return true;

  return false;
}

namespace llvm {
InstructionSelector *
createWDC65816InstructionSelector(const WDC65816TargetMachine &TM,
                              const WDC65816Subtarget &Subtarget,
                              const WDC65816RegisterBankInfo &RBI) {
  return new WDC65816InstructionSelector(TM, Subtarget, RBI);
}
} // end namespace llvm
